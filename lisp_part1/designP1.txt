LISP Interpreter Part 1Rupam KunduFirst Year Graduate StudentThe Ohio State UniversityEmail : kundu.24@osu.edu------------------------------------------------------Objective: This is the first part of the interpreter project and will consist of the front-end of the interpreter. This will read in an input s-expression in either dot or list notation (or both), convert it into the appropriate internal representation, and ouput the s-expression in the dot notation.Language Used : C++.Implementation Overview:         1. Accepts input strings via "main.cpp"                2. Break down into Tokens/valid strings with allowed set of characters using "Lisp_Token.cpp".                   3."Lisp_Parse.cpp" creates a binary parse tree using the valid tokens obtained from the previous step. Additionally it also converts any lower case to upper case letters.          4. SExp" defines the different classes and exression types.         5. Output_Dot_notation() gives the dotted notation of the verified input.